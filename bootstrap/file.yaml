---
# Source: base/templates/application-druid.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: druid
---
# Source: base/templates/application-fluentd-operator.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: fluent
---
# Source: base/templates/application-grafana-kafka-operator.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: grafana-operator
---
# Source: base/templates/application-ingress-controller.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
# Source: base/templates/application-keycloak.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: keycloak
---
# Source: base/templates/application-opensearch.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: opensearch-operator
---
# Source: base/templates/application-strimizi.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
# Source: base/templates/application-telegraf.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: telegraf-operator
---
# Source: base/templates/application-vector.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: vector
---
# Source: base/templates/application-victoria-metrics.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: victoria-metrics
---
# Source: base/templates/application-zookeeper.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: zookeeper
---
# Source: base/templates/application-kafka-ui.yaml
apiVersion: v1
data:
  auth: "a2Fma2E6JDJhJDEwJFJPUy5NNWVQUUNiclVzMVcudzJXa09lVXBOZEtJMFp2SnBOQ2lLOGZ3bEVHU1dlN2I3RmFD"
kind: Secret
metadata:
  name: kafka-ui-basic-auth
  namespace: kafka
type: Opaque
---
# Source: base/templates/appproject-base.yaml
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: base
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  # Project description
  description: Data Point Base
  clusterResourceWhitelist:
    - group: '*'
      kind: '*'
  destinations:
    - namespace: '*'
      server: '*'
  sourceRepos:
    - '*'
---
# Source: base/templates/application-cert-manager.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name:  
  namespace: argocd
spec:
  destination:
    namespace: 
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: 
    targetRevision: 
    helm:
      releaseName: 
      values: |
          installCRDs: true
---
# Source: base/templates/application-druid.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: druid 
  namespace: argocd
spec:
  destination:
    namespace: druid
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://github.com/druid-io/druid-operator/
    targetRevision: druid-operator-0.0.9
    path: chart
    helm:
      releaseName: druid
      # values: |
      #     replicaCount:
---
# Source: base/templates/application-fluentd-operator.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: fluent-operator 
  namespace: argocd
spec:
  destination:
    namespace: fluent
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://github.com/fluent/fluent-operator/
    targetRevision: v1.7.0
    path: charts/fluent-operator
    helm:
      releaseName: fluent-operator
      values: |
          kubernetes: true
          containerRuntime: docker
---
# Source: base/templates/application-grafana-kafka-operator.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: grafana-operator 
  namespace: argocd
spec:
  destination:
    namespace: grafana-operator
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://charts.bitnami.com/bitnami/
    targetRevision: 20.0.5
    chart: kafka
    helm:
      releaseName: grafana-operator
      # values: |
---
# Source: base/templates/application-ingress-controller.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx 
  namespace: argocd
spec:
  destination:
    namespace: ingress-nginx
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.4.2
    chart: ingress-nginx
    helm:
      releaseName: ingress-nginx
      values: |
        controller:
          publishService:
            enabled: true
        # commonLabels: {}
        # tcp: {}
        # udp: {}

        # #  8080: "default/example-tcp-svc:9000"

        # controller:
        #   name: controller

        #   containerPort:
        #     http: 80
        #     https: 443

        #   # -- Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
        #   config: {}

        #   # -- Annotations to be added to the controller config configuration configmap.
        #   configAnnotations: {}

        #   # -- Will add custom headers before sending traffic to backends according to https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/custom-headers
        #   proxySetHeaders: {}

        #   # -- Will add custom headers before sending response traffic to the client according to: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#add-headers
        #   addHeaders: {}

        #   # -- Optionally customize the pod dnsConfig.
        #   dnsConfig: {}

        #   # -- Optionally customize the pod hostname.
        #   hostname: {}
        #   allowSnippetAnnotations: true

        #   hostNetwork: true

        #   ## Use host ports 80 and 443
        #   ## Disabled by default
        #   hostPort:
        #     # -- Enable 'hostPort' or not
        #     enabled: false
        #     ports:
        #       # -- 'hostPort' http port
        #       http: 80
        #       # -- 'hostPort' https port
        #       https: 443

        #   # node or nodes where an ingress controller pod is running.
        #   publishService:
        #     # -- Enable 'publishService' or not
        #     enabled: true
        #     # -- Allows overriding of the publish service to bind to
        #     # Must be <namespace>/<service_name>
        #     pathOverride: ""

        #   # Limit the scope of the controller to a specific namespace
        #   scope:
        #     # -- Enable 'scope' or not
        #     enabled: false
        #     # -- Namespace to limit the controller to; defaults to $(POD_NAMESPACE)
        #     namespace: ""
        #     # -- When scope.enabled == false, instead of watching all namespaces, we watching namespaces whose labels
        #     # only match with namespaceSelector. Format like foo=bar. Defaults to empty, means watching all namespaces.
        #     namespaceSelector: ""

        #   # -- Allows customization of the configmap / nginx-configmap namespace; defaults to $(POD_NAMESPACE)
        #   configMapNamespace: ""

        #   tcp:
        #     configMapNamespace: ""
        #     annotations: {}

        #   udp:
        #     configMapNamespace: ""
        #     annotations: {}

        #   extraArgs: []
        #   extraEnvs: []

        #   # -- Use a `DaemonSet` or `Deployment`
        #   kind: DaemonSet

        #   podAnnotations:
        #     prometheus.io/scrape: "true"
        #     prometheus.io/port: "10254"
        #     prometheus.io/scheme: http

        #   customTemplate:
        #     configMapName: ""
        #     configMapKey: ""

        #   service:
        #     enabled: true

        #     appProtocol: true

        #     annotations: 
        #       service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: true
        #       service.beta.kubernetes.io/do-loadbalancer-hostname: do.example.com
        #     labels: {}
        #     enableHttp: true
        #     enableHttps: true

        #     ports:
        #       http: 80
        #       https: 443
        #     targetPorts:
        #       http: http
        #       https: https
        #     type: LoadBalancer

        #     nodePorts:
        #       http: ""
        #       https: ""
        #       tcp: {}
        #       udp: {}

        #     external:
        #       enabled: true


        #   extraContainers: []
        #   extraVolumeMounts: []
        #   extraVolumes: []
        #   extraInitContainers: []
        #   extraModules: []

        #   metrics:
        #     port: 10254
        #     portName: metrics
        #     # if this port is changed, change healthz-port: in extraArgs: accordingly
        #     enabled: true

        #     service:
        #       annotations:
        #         prometheus.io/scrape: "true"
        #         prometheus.io/port: "10254"

        #       # clusterIP: ""

        #       # -- List of IP addresses at which the stats-exporter service is available
        #       ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
        #       ##
        #       externalIPs: []

        #       # loadBalancerIP: ""
        #       loadBalancerSourceRanges: []
        #       servicePort: 10254
        #       type: ClusterIP
        #       # externalTrafficPolicy: ""
        #       # nodePort: ""
---
# Source: base/templates/application-kafka-ui.yaml
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kafka-ui 
  namespace: argocd
spec:
  destination:
    namespace: kafka
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://provectus.github.io/kafka-ui
    targetRevision: 0.5.1
    chart: kafka-ui
    helm:
      releaseName: kafka-ui
      values: |
        yamlApplicationConfig:
          kafka:
            clusters:              
                - name: test
                  bootstrapServers: test-kafka-bootstrap:9092
        # Ingress configuration
        ingress:
          # Enable ingress resource
          enabled: true

          # Annotations for the Ingress
          annotations: 

            cert-manager.io/cluster-issuer: letsencrypt-prod
            nginx.ingress.kubernetes.io/auth-type: basic
            nginx.ingress.kubernetes.io/auth-secret: kafka-ui-basic-auth
            nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - foo'

          # ingressClassName for the Ingress
          ingressClassName: "nginx"

          # The path for the Ingress
          path: "/"

          # The path type for the Ingress
          pathType: "Prefix"  

          # The hostname for the Ingress
          host: "kafka.example.com"

          # configs for Ingress TLS
          tls:
            # Enable TLS termination for the Ingress
            enabled: true
            # the name of a pre-created Secret containing a TLS private key and certificate
            secretName: "kafka-ui-tls"

          # HTTP paths to add to the Ingress before the default path
          precedingPaths: []

          # Http paths to add to the Ingress after the default path
          succeedingPaths: []
---
# Source: base/templates/application-keycloak.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: keycloak-operator 
  namespace: argocd
spec:
  destination:
    namespace: keycloak
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://github.com/anieo/gitops-helm.git
    targetRevision: main
    path: charts/keycloak-operator
    helm:
      releaseName: keycloak-operator
      # values: |
      #     replicaCount:
---
# Source: base/templates/application-opensearch.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: opensearch-operator 
  namespace: argocd
spec:
  destination:
    namespace: opensearch-operator
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://opster.github.io/opensearch-k8s-operator/
    targetRevision: 2.2.0
    chart: opensearch-operator
    helm:
      releaseName: opensearch-operator
      # values: |
---
# Source: base/templates/application-strimizi.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: strimzi 
  namespace: argocd
spec:
  destination:
    namespace: kafka
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://strimzi.io/charts
    targetRevision: 0.32.0
    chart: strimzi-kafka-operator
    helm:
      releaseName: strimzi
      # values: |
---
# Source: base/templates/application-telegraf.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: telegraf-operator 
  namespace: argocd
spec:
  destination:
    namespace: telegraf-operator
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://helm.influxdata.com/
    targetRevision: 1.3.10
    chart: telegraf-operator
    helm:
      releaseName: telegraf-operator
      # values: |
---
# Source: base/templates/application-vector.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vector 
  namespace: argocd
spec:
  destination:
    namespace: vector
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://helm.vector.dev/
    targetRevision: 0.19.0
    chart: vector
    helm:
      releaseName: vector
      values: |
        customConfig: 
          data_dir: /vector-data-dir
          api:
            enabled: true
            address: 127.0.0.1:8686
            playground: false
          sources:             
            kube_logs:
              exclude_paths_glob_patterns:
              - '**/exclude/**'
              extra_field_selector: metadata.name!=pod-name-to-exclude
              extra_label_selector: my_custom_label!=my_value
              extra_namespace_label_selector: my_custom_label!=my_val
              ignore_older_secs: 600
              read_from: beginning
              self_node_name: ${VECTOR_SELF_NODE_NAME}
              type: kubernetes_logs
            logs:
              condition:
                source: .status == 500
                type: vrl
              format: shuffle
              lines:
              - Line 1
              - Line 2
              type: demo_logs
          sinks:             
            logs:
              type: kafka
              inputs:
                - logs
                - kube_logs
              bootstrap_servers: test-kafka-brokers.kafka.svc.cluster.local:9092
              topic: vector-logs-1
              compression: none
              encoding:
                codec: json
---
# Source: base/templates/application-victoria-metrics.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: victoria-metrics 
  namespace: argocd
spec:
  destination:
    namespace: victoria-metrics
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://victoriametrics.github.io/helm-charts/
    targetRevision: 0.17.2
    chart: victoria-metrics-operator
    helm:
      releaseName: victoria-metrics
      values: |
        rbac:
            pspEnabled: false
---
# Source: base/templates/application-zookeeper.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: zookeeper 
  namespace: argocd
spec:
  destination:
    namespace: zookeeper
    server: https://kubernetes.default.svc 
  project: base
  syncPolicy:
    automated:
        selfHeal: true
        prune: true
    syncOptions:
  source: 
    repoURL: https://charts.pravega.io
    targetRevision: 0.2.13
    chart: zookeeper-operator
    helm:
      releaseName: zookeeper
      # values: |
      #     replicaCount:
