{{- template "application" $.Values.ingress_controller }}
      values: |
        controller:
          publishService:
            enabled: true
        # commonLabels: {}
        # tcp: {}
        # udp: {}

        # #  8080: "default/example-tcp-svc:9000"

        # controller:
        #   name: controller

        #   containerPort:
        #     http: 80
        #     https: 443

        #   # -- Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/
        #   config: {}

        #   # -- Annotations to be added to the controller config configuration configmap.
        #   configAnnotations: {}

        #   # -- Will add custom headers before sending traffic to backends according to https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/custom-headers
        #   proxySetHeaders: {}

        #   # -- Will add custom headers before sending response traffic to the client according to: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#add-headers
        #   addHeaders: {}

        #   # -- Optionally customize the pod dnsConfig.
        #   dnsConfig: {}

        #   # -- Optionally customize the pod hostname.
        #   hostname: {}
        #   allowSnippetAnnotations: true

        #   hostNetwork: true

        #   ## Use host ports 80 and 443
        #   ## Disabled by default
        #   hostPort:
        #     # -- Enable 'hostPort' or not
        #     enabled: false
        #     ports:
        #       # -- 'hostPort' http port
        #       http: 80
        #       # -- 'hostPort' https port
        #       https: 443

        #   # node or nodes where an ingress controller pod is running.
        #   publishService:
        #     # -- Enable 'publishService' or not
        #     enabled: true
        #     # -- Allows overriding of the publish service to bind to
        #     # Must be <namespace>/<service_name>
        #     pathOverride: ""

        #   # Limit the scope of the controller to a specific namespace
        #   scope:
        #     # -- Enable 'scope' or not
        #     enabled: false
        #     # -- Namespace to limit the controller to; defaults to $(POD_NAMESPACE)
        #     namespace: ""
        #     # -- When scope.enabled == false, instead of watching all namespaces, we watching namespaces whose labels
        #     # only match with namespaceSelector. Format like foo=bar. Defaults to empty, means watching all namespaces.
        #     namespaceSelector: ""

        #   # -- Allows customization of the configmap / nginx-configmap namespace; defaults to $(POD_NAMESPACE)
        #   configMapNamespace: ""

        #   tcp:
        #     configMapNamespace: ""
        #     annotations: {}

        #   udp:
        #     configMapNamespace: ""
        #     annotations: {}

        #   extraArgs: []
        #   extraEnvs: []

        #   # -- Use a `DaemonSet` or `Deployment`
        #   kind: DaemonSet

        #   podAnnotations:
        #     prometheus.io/scrape: "true"
        #     prometheus.io/port: "10254"
        #     prometheus.io/scheme: http

        #   customTemplate:
        #     configMapName: ""
        #     configMapKey: ""

        #   service:
        #     enabled: true

        #     appProtocol: true

        #     annotations: 
        #       service.beta.kubernetes.io/do-loadbalancer-enable-proxy-protocol: true
        #       service.beta.kubernetes.io/do-loadbalancer-hostname: {{.Values.ingress_controller.subdomain }}.{{ .Values.domain }}
        #     labels: {}
        #     enableHttp: true
        #     enableHttps: true

        #     ports:
        #       http: 80
        #       https: 443
        #     targetPorts:
        #       http: http
        #       https: https
        #     type: LoadBalancer

        #     nodePorts:
        #       http: ""
        #       https: ""
        #       tcp: {}
        #       udp: {}

        #     external:
        #       enabled: true


        #   extraContainers: []
        #   extraVolumeMounts: []
        #   extraVolumes: []
        #   extraInitContainers: []
        #   extraModules: []

        #   metrics:
        #     port: 10254
        #     portName: metrics
        #     # if this port is changed, change healthz-port: in extraArgs: accordingly
        #     enabled: true

        #     service:
        #       annotations:
        #         prometheus.io/scrape: "true"
        #         prometheus.io/port: "10254"

        #       # clusterIP: ""

        #       # -- List of IP addresses at which the stats-exporter service is available
        #       ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
        #       ##
        #       externalIPs: []

        #       # loadBalancerIP: ""
        #       loadBalancerSourceRanges: []
        #       servicePort: 10254
        #       type: ClusterIP
        #       # externalTrafficPolicy: ""
        #       # nodePort: ""
